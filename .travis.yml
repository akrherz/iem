sudo: required
dist: xenial
cache:
  timeout: 1000
  directories:
    - $HOME/.cache/pip
    - $HOME/miniconda2
    - $HOME/miniconda3
addons:
  hosts:
    - iemdb.local
    - iemdb2.local
    - iemdb-hads.local
    - iemdb-iemre.local
    - iemdb-mos.local
    - iem.local
    - iem-memcached
    - iemdb-talltowers.local
    - iem-web-services.local
language: python
env:
  matrix:
    - PYTHON_VERSION=2.7;
      MOD_WSGI_SO=mod_wsgi-py27.so;
      MINICONDA=2
    - PYTHON_VERSION=3.6;
      MOD_WSGI_SO=mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so;
      MINICONDA=3
before_install:
  # https://travis-ci.community/t/install-postgresql-11/3894/5
  - sudo service postgresql stop
  - sudo apt-get --yes remove postgresql-10-postgis-2.4
  - sudo apt install -yq --no-install-suggests --no-install-recommends postgresql-11-postgis-2.5-scripts postgresql-11 postgresql-client-11 postgresql-11-postgis-2.5
  - sed -e 's/^port.*/port = 5432/' /etc/postgresql/11/main/postgresql.conf > postgresql.conf
  - sudo chown postgres postgresql.conf
  - sudo cp /etc/postgresql/{10,11}/main/pg_hba.conf
  - sudo mv postgresql.conf /etc/postgresql/11/main
  - sudo service postgresql restart 11
  - sudo mkdir -p /mesonet/www/logs
  - sudo ln -s `pwd` /opt/iem
  - echo `pwd`
  - chmod 755 $HOME
  - sudo apt-get install librrd-dev
  - sudo add-apt-repository ppa:ubuntugis/ppa -y
  - sudo apt-get update -qq
  # need apache2-dev for mod-wsgi to build
  - sudo apt-get install apache2 apache2-dev memcached
  - sudo service memcached start
  - sudo a2enmod headers rewrite proxy cgi expires authz_groupfile
  # we do things the old fashioned way, we earn it
  - sudo a2dissite 000-default.conf
  - sudo cp deployment/apache_configs/mod_wsgi.conf /etc/apache2/sites-enabled/
  - echo '<VirtualHost *:80>' | sudo tee /etc/apache2/sites-enabled/iem.conf > /dev/null
  - cat config/mesonet.inc | sudo tee -a /etc/apache2/sites-enabled/iem.conf > /dev/null
  - echo '</VirtualHost>' | sudo tee -a /etc/apache2/sites-enabled/iem.conf > /dev/null
  # Setup PATH so that miniconda gets in the front
  - echo "export PATH=/home/travis/miniconda$MINICONDA/envs/prod/bin:$PATH" | sudo tee -a /etc/apache2/envvars > /dev/null
  - echo "export LD_PRELOAD=/home/travis/miniconda$MINICONDA/envs/prod/lib/libz.so" | sudo tee -a /etc/apache2/envvars > /dev/null
  # use conda provided mod_wsgi
  - echo "LoadModule wsgi_module $HOME/miniconda$MINICONDA/envs/prod/lib/python$PYTHON_VERSION/site-packages/mod_wsgi/server/$MOD_WSGI_SO" | sudo tee -a /etc/apache2/mods-enabled/wsgi.load > /dev/null;
  - echo "WSGIApplicationGroup %{GLOBAL}" | sudo tee -a /etc/apache2/mods-enabled/wsgi.load > /dev/null;
install:
  - if [[ ! -f $HOME/miniconda$MINICONDA/envs/prod/bin/python ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda$MINICONDA-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -f -b -p $HOME/miniconda$MINICONDA;
      $HOME/miniconda$MINICONDA/bin/conda config --set quiet True --set always_yes yes --set changeps1 no;
      $HOME/miniconda$MINICONDA/bin/conda config --prepend channels conda-forge;
      $HOME/miniconda$MINICONDA/bin/conda config --set channel_priority strict;
      $HOME/miniconda$MINICONDA/bin/conda update conda;
      $HOME/miniconda$MINICONDA/bin/conda create -n prod python=$PYTHON_VERSION;
    fi
  - export PATH="$HOME/miniconda$MINICONDA/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - . $HOME/miniconda$MINICONDA/etc/profile.d/conda.sh
  - conda activate prod
  - hash -r
  - conda install -q --file conda_requirements.txt
  # Remove packages to save space
  - conda clean -q --packages
  # Debug printout
  - conda list
  - conda config --show channels
  # Then do additional pip stuff
  - pip install --upgrade -r pip_requirements.txt
  # now delete out some cache stuff, so that our travis-ci cache is still valid
  - rm -f $HOME/miniconda$MINICONDA/pkgs/cache/*
before_script:
  # https://travis-ci.community/t/t/712/12
  - export PATH="/usr/lib/postgresql/11/bin:$PATH"
  - psql -c 'CREATE ROLE travis SUPERUSER LOGIN CREATEDB;' -U postgres || true
  - cd database; sh bootstrap.sh
  - python schema_manager.py
  - cd ..
script:
  # restart apache
  - sudo service apache2 restart || sudo cat /var/log/apache2/error.log
  # Run autoplot tests with basically no data in database
  - python test/run_autoplots.py
  # Add some test data to the database
  - python database/store_test_data.py
  - python scripts/dbutil/sync_stations.py
  # Run autoplot testing a second time
  - python test/run_autoplots.py
  - pytest cgi-bin/request/asos.py
  - pytest cgi-bin/request/daily.py
  - sudo cat /var/log/apache2/error.log
