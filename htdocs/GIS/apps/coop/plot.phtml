<?php
require_once "../../../../config/settings.inc.php";
define("IEM_APPID", 49);
require_once "../../../../include/myview.php";
require_once "../../../../include/database.inc.php";
require_once "../../../../include/iemmap.php";
/** Need to use external date lib *
 * http://php.weblogs.com/adodb_date_time_library
 */
require_once "../../../../include/adodb-time.inc.php";
require_once "../../../../include/forms.php";
require_once "../../../../include/network.php";

$var = isset($_GET["var"]) ? xssafe($_GET["var"]): "high";
$year = isset($_GET["year"]) ? intval($_GET["year"]): date("Y");
$month = isset($_GET["month"]) ? intval($_GET["month"]): date("m");
$day = isset($_GET["day"]) ? intval($_GET["day"]): date("d");
$source = isset($_GET["source"]) ? xssafe($_GET["source"]): "prelim";
$size = isset($_GET["size"]) ? xssafe($_GET["size"]): "640x480";
$showlabels = isset($_GET["labels"]);
$tokens = explode("x", $size);
$width = $tokens[0]; $height = $tokens[1];

$ts = adodb_mktime(0,0,0,$month,$day,$year);
$ndate = adodb_date("Y-m-d", $ts);

$t = new MyView();
$t->title = "NWS COOP Daily Plotter";
$t->thispage = "networks-coop";
$t->headextra = <<<EOF
<script language="JavaScript" type="text/javascript">
<!--//BEGIN Script
function new_window(url) {
        link = 
        window.open(url,"_new","toolbar=0,location=0,directories=0,status=0,menubar=no,scrollbars=yes,resizable=yes,width=450,height=400");
} 
//END Script-->
</script>
EOF;

if ($source == "qc") $nt = new NetworkTable("IACLIMATE");
else $nt = new NetworkTable("IA_COOP");
$cities = $nt->table;

function plotNoData($map, $img){
	$layer = $map->getLayerByName("credits");

	$point = ms_newpointobj();
	$point->setXY( 100, 200);
	$point->draw($map, $layer, $img, 1,
			"  No data found for this date! ");


}

$varDef = Array("low" => "Low Temperature",
		"precip" => "Precipitation",
		"snow" => "Snowfall",
		"snowd" => "Snow Depth",
		"high" => "High Temperature"
);



$rnd = Array(
		"et" => 2,
		"prec" => 2,
		"snow" => 0);


$myStations = $cities;

$map = ms_newMapObj("../../../../data/gis/base26915.map");
$map->selectOutputFormat("PNG24");
$map->setSize($width, $height);
$map->setProjection("init=epsg:26915");

$map->setextent(250000, 4450000, 690000, 4880000);

$states = $map->getlayerbyname("states");
$states->set("status", MS_ON);

$counties = $map->getlayerbyname("iacounties");
$counties->set("status", MS_ON);

$snet = $map->getlayerbyname("datapoint");
$snet->set("status", MS_ON);

$ponly = $map->getlayerbyname("pointonly");
$ponly->set("status", MS_ON);

$cityname = $map->getlayerbyname("cityname");
$cityname->set("status", MS_ON);

$img = $map->prepareImage();
$counties->draw($img);
$states->draw($img);

if ($source == "qc")
{
	$c = iemdb("coop");
	$sql = sprintf("SELECT * from alldata_ia "
			."WHERE day = '%s' and %s is not null"
			." and substr(station, 3, 1) != 'C' and station != 'IA0000'",
			adodb_date("Y-m-d", $ts), $var );
	$cutstring1 = 2;
	$cutstring2 = 4;
} else {
	$c = iemdb("iem");
	$cutstring1 = 0;
	$cutstring2 = 5;
	$sql = sprintf("SELECT id as station, day, snowd, max_tmpf as high, ".
	    "min_tmpf as low, pday as precip, snow, snowd from summary_%s s ".
	    "JOIN stations t on (t.iemid = s.iemid) WHERE day = '%s' and ".
	    "network = 'IA_COOP'",
	    adodb_date("Y", $ts), adodb_date("Y-m-d", $ts) );
}

$rs =  pg_exec($c, $sql);
$vals = Array();
for ($i=0; $row = @pg_fetch_array($rs,$i); $i++) {
	$stid = $row['station'];
	$vals[$stid] = (float)$row[$var];
}
/* ------------------------------------------------------- */


$tr = "# ".$ndate." ". $varDef[$var] ."
# Download From: https://mesonet.agron.iastate.edu/GIS/apps/coop/plot.phtml
# Download Date: ". strftime("%d %b %Y") ."
# Data Contact: Daryl Herzmann akrherz@iastate.edu 515.294.5978
#-----------------------snip------------------\n";
$tr .= sprintf("%10s,%20s,%10s,%10s,%10s,%10s\n", 'ID', 'StationName', 'Date',
    'Latitude', 'Longitude', $var);
foreach($vals as $key => $value){
	$ukey = strtoupper($key);
	if (! isset($cities[$ukey]) ) continue;
	if ($value == null) continue;

	$tr .= sprintf("%10s,%-20s,%10s,%10.4f,%10.4f,%10s\n", $key, $cities[$ukey]['name'], $ndate,
			$cities[$ukey]['lat'], $cities[$ukey]['lon'], $value );

	if ($ukey == "IA0807") $cities["IA0807"]["lon"] -= 0.1;

	if ($showlabels){
		$pt = ms_newPointObj();
		$pt->setXY($cities[$ukey]['lon'], $cities[$ukey]['lat'], 0);
		$pt->draw($map, $ponly, $img, 0);

		$pt = ms_newPointObj();
		$pt->setXY($cities[$ukey]['lon'], $cities[$ukey]['lat'], 0);
		$pt->draw($map, $cityname, $img, 0, substr($key,$cutstring1,$cutstring2) );
	}

	// Value UL
	$pt = ms_newPointObj();
	$pt->setXY($cities[$ukey]['lon'], $cities[$ukey]['lat'], 0);
	if ($value == 0.0001) $value = "T";
	$pt->draw($map, $snet, $img, 2, $value);
}

if ($i == 0)
	plotNoData($map, $img);

iemmap_title($map, $img, $ndate ." ". $varDef[$var] );
$map->drawLabelCache($img);

$url = $img->saveWebImage();

$ar = Array("qc" => "QC'd (1893-)",
			"prelim" => "Preliminary (2004+)");
$sourceselect = make_select("source", $source, $ar);

$ar = Array("high" => "High Temperature",
	"low" => "Low Temperature",
	"precip" => "Precipitation",
	"snow" => "Snow [1]",
	"snowd" => "Snow Depth [2]");
$varselect = make_select("var", $var, $ar);

$yselect = yearselect(1893, $year);
$mselect = monthSelect2($month, 'month');
$dselect = daySelect2($day, 'day');

$ar = Array(
	"640x480" => "640x480",
	"1024x768" => "1024x768",
	"1280x1024" => "1280x1024"
);
$sizeselect = make_select("size", $size, $ar);

$showlabels = ($showlabels) ? " CHECKED=\"CHECKED\" ": "";

$minusone = sprintf("plot.phtml?source=%s&amp;var=%s&amp;year=%s&amp;month=%s&amp;day=%s&amp;size=%s",
		$source, $var, date("Y", $ts - 86400), date("m", $ts - 86400),
		date("d", $ts - 86400), $size);
$plusone = sprintf("plot.phtml?source=%s&amp;var=%s&amp;year=%s&amp;month=%s&amp;day=%s&amp;size=%s",
		$source, $var, date("Y", $ts + 86400), date("m", $ts + 86400),
		date("d", $ts + 86400), $size);

$t->content = <<<EOF
<p>With this application, you can plot COOP observations for a date of your
choice.

<form method="GET" name="myform">
<table class="table table-bordered">
 <tr>
   <th>Select Datasource:</th>
   <th>Select Parameter:</th>
   <th>Year</th>
   <th>Month</th>
   <th>Day</th>
   <th>Image Size</th>
   <td></td>
  </tr>
 <tr>
  <td>{$sourceselect}</td>
  <td>{$varselect}</td>
  <td>{$yselect}</td>
  <td>{$mselect}</td>
  <td>{$dselect}</td>
  <td>{$sizeselect}</td>
  <td><input type="submit" value="Make Plot">
  <a href="{$minusone}" class="btn btn-default"><i class="fa fa-minus"></i> 1 Day</a>
  <a href="{$plusone}" class="btn btn-default"><i class="fa fa-plus"></i> 1 Day</a>
  </td>
  </tr>
</table>
<input type="checkbox" name="labels"{$showlabels}>Show point labels
</form>
<ul>
<li>Snowfall data is not complete.  Please be careful using the data.</li>
<li>Snowfall depth data only goes back to 1991 for Quality Controled source.</li>
<li>The preliminary data is for the date the observation was reported and not
necessarily for the local date.  The reports are around 7 AM, so the high
temperature (for example) was most likely for the previous date.</li>
</ul>

<p><h3>Plot</h3>
  <p>Open this plot in a <a href="javascript:new_window('{$url}');">new window</a> for comparison with other plots. Once the
image is loaded up in another window, you can modify this plots 
parameters.

<br />  <img src="{$url}" border=1>

<p>
<img src="/images/gisready.png"><h3> Data Listing</h3>
<pre>{$tr}</pre>

<p>You should be able to 'copy & paste' this raw data listing into a simple
text editor and save the data file on your machine.  Most GIS systems can 
then import this dataset as a layer.  You may have to omit the commented lines
(#) if your GIS has trouble importing the data.
EOF;
$t->render('single.phtml');
?>
