<?php 
/*
 * Front-end that allows the download of archived WWA metadata
 */
include("../../../config/settings.inc.php");
define("IEM_APPID", 18);
include("../../../include/forms.php");
include("../../../include/myview.php");
include("../../../include/network.php");

$t = new MyView();
$t->title = "NWS Watch Warning Archive Download";
$t->thispage = "gis-";

$nt = new NetworkTable("WFO");

function get_file_size($filename, $size_in = 'MB') {
	$size_in_bytes = @filesize ( $filename );
	
	// Precision: decimals at the end for each type of size
	
	if ($size_in == 'B') {
		$size = $size_in_bytes;
		$precision = 0;
	} elseif ($size_in == 'KB') {
		$size = (($size_in_bytes / 1024));
		$precision = 2;
	} elseif ($size_in == 'MB') {
		$size = (($size_in_bytes / 1024) / 1024);
		$precision = 2;
	} elseif ($size_in == 'GB') {
		$size = (($size_in_bytes / 1024) / 1024) / 1024;
		$precision = 2;
	}
	
	$size = round ( $size, $precision );
	
	return $size . ' ' . $size_in;
}

$location_select_groups = array('states', 'wfo');
$location_select_group_count = count($location_select_groups);
$location_select_group_meta = array(
    'states' => array(
        'title' => 'Limit State'
    ),
    'wfo' => array(
        'title' => 'Limit Weather Forecast Office (WFO)'
    )
);
$selected_group = 'wfo';
$wselect = "<select name=\"wfos[]\" MULTIPLE size=\"5\">";
$wselect .= "<option value=\"ALL\" SELECTED>All Available</option>";
while( list($key, $value) = each($nt->table) ){
  $wselect .= "<option value='$key'>[$key] ". $nt->table[$key]["name"] ."</option>\n";
}
$wselect .= "</select>";

$location_select_html = array(
    'states' => stateSelect('AL', '', 'states[]', 5, true),
    'wfo' => $wselect
);

$y1select = yearSelect2(1986, date("Y"), "year1");
$m1select = monthSelect2(0,"month1");
$d1select = daySelect2(0, "day1");
$h1select = gmtHourSelect(0, "hour1");
$mi1select = minuteSelect(0, "minute1");

$y2select = yearSelect2(1986, date("Y"), "year2");
$m2select = monthSelect2(0,"month2");
$d2select = daySelect2(0, "day2");
$h2select = gmtHourSelect(0, "hour2");
$mi2select = minuteSelect(0, "minute2");

$y3select = yearSelect2(1986, date("Y"), "year3");
$m3select = monthSelect2(0,"month3");
$d3select = daySelect2(0, "day3");
$h3select = gmtHourSelect(0, "hour3");
$mi3select = minuteSelect(0, "minute3");


$table = "";
for($year=1986;$year<=date("Y");$year++){
	$allurl = sprintf("<a href=\"/pickup/wwa/%s_all.zip\">Zip</a>",  $year);
	$allfp = "/mesonet/share/pickup/wwa/${year}_all.zip";
	$tsmfurl = sprintf("<a href=\"/pickup/wwa/%s_tsmf.zip\">Zip</a>",  $year);
	$tsmffp = "/mesonet/share/pickup/wwa/${year}_tsmf.zip";
	$sbwurl = "N/A";
	$sbwfp = "/dev/zero";
	if ($year > 2001){
		$sbwurl = sprintf("<a href=\"/pickup/wwa/%s_tsmf_sbw.zip\">Zip</a>", 
				$year);
		$sbwfp = "/mesonet/share/pickup/wwa/${year}_tsmf_sbw.zip";
	}
	$table .= sprintf("<tr><th>%s</th><td>%s (%s)</td><td>%s (%s)</td><td>%s (%s)</td></tr>", $year,
		$allurl, get_file_size($allfp), $tsmfurl, get_file_size($tsmffp),
		$sbwurl, get_file_size($sbwfp) );
}

$content = <<<EOF
<h3>Archived NWS Watch/Warnings</h3>

<p>This page allows you to generate a custom GIS shapefile or Google Earth KML of NWS issued watches
and warnings for a time period of your choice.  Please be sure to read the
archive status and dbf schema below. The IEM's archive is certainly not complete or official.  
If you are looking for a real-time source of warning shapefiles, 
you can find that <a href="/data/gis/shape/4326/us/current_ww.zip">here.</a></p>

<div class="alert alert-warning"> Due to transient server load or other issues,
this application sometimes fails to 
generate output.  You may wish to try shorting the duration of your 
request or email <a href="/info/contacts.php">us</a> for help.
</div>

<div class="row"><div class="col-sm-6">

<div style="background: #EEEEEE; border: #000 solid 1px; padding: 5px;">

<form method="GET" action="/cgi-bin/request/gis/watchwarn.py">
<input type="hidden" value="yes" name="simple">
EOF;

for($group_idx=0;$group_idx<$location_select_group_count;$group_idx++){
    $group_key = $location_select_groups[$group_idx];
    $group_meta = $location_select_group_meta[$group_key];
    $group_selected = ($group_key === $selected_group);
    $group_input_css = 'location_group';
    $group_select_container_id = $group_input_css . '-' . $group_key;
    if($group_selected){
        $group_input_checked = 'checked';
    }
    else{
        $group_input_checked = '';
    }
    $content .= '<h4>';
    $content .=   '<input type="radio" name="location_group" value="'.$group_key.'"';
    $content .=   ' ' . $group_input_checked . '>';
    $content .=   ' ' . $group_meta['title'];
    $content .= '</h4>';
    $content .= '<div class="' . $group_input_css . '" id="' . $group_select_container_id . '">';
    $content .= $location_select_html[$group_key];
    $content .= '</div>';
}
$content .= <<<EOF

<h4>Select time interval</h4>
<i>(Times are in UTC.</i>

<table class="table table-condensed table-bordered table-striped">
  <tr>
    <td></td>
    <th>Year</th><th>Month</th><th>Day</th>
    <th>Hour</th><th>Minute</th>
  </tr>

<tr>
	<th colspan="6">
	<input type="radio" name="timeopt" value="1" checked="checked" /> 
	Option 1: WWA events with start time between the specified start
	and end dates.</th>
</tr>
  
  <tr>
    <th>Start:</th>
    <td>{$y1select}</td><td>{$m1select}</td><td>{$d1select}</td>
    <td>{$h1select}</td><td>{$mi1select}</td></tr>
  <tr>
    <th>End:</th>
    <td>{$y2select}</td><td>{$m2select}</td><td>{$d2select}</td>
    <td>{$h2select}</td><td>{$mi2select}</td></tr>
<tr>
	<th colspan="6">
	<input type="radio" name="timeopt" value="2" /> 
	Option 2: WWA events valid at this exact time (UTC)</th>
</tr>
	<tr>
    <th>Valid:</th>
    <td>{$y3select}</td><td>{$m3select}</td><td>{$d3select}</td>
    <td>{$h3select}</td><td>{$mi3select}</td></tr>
    
    
    </table>

<br /><input type="checkbox" name="limit0" value="yes">Limit Output to Tornado, Severe Thunderstorm, Marine, and Flash Flood Warnings
<br /><input type="checkbox" name="limit1" value="yes">Limit Output to only Storm Based Warnings
<!--
<br /><input type="checkbox" name="simple" value="yes">Use simplified geometries
instead of the high resolution AWIPS zones database.  This trims the file size
significantly, but topology is not conserved. If you just want to make maps at
state level scale, pick this option.
-->
<script type="text/javascript">
function kmlsub(f, url){
	f.action = url;
	f.submit();
}
</script>
<p><input type="submit" value="Request Shapefile" onclick="kmlsub(this.form, '/cgi-bin/request/gis/watchwarn.py');"/>
<input type="submit" value="Request KML (*)" onclick="kmlsub(this.form, '/kml/sbw_interval.php');" />
 <input type="reset" />
<br />* Only Storm Based Warnings are available via KML.
</form>
</div>

<h4>Shapefile DBF schema:</h4>
<table>
<tr><th>WFO</th><td>Three letter ID for issuing Weather Forecast Office</td></tr>
<tr><th>ISSUED   </th><td>String representing product initial valid UTC 
	timestamp YYYYMMDDHHMM</td></tr>
<tr><th>EXPIRED  </th><td>String representing product expiration, this is not the original 
         product expiration, but the actual time the product was no longer
         valid.  For example, the product could have been extended in time
         or cancelled.</td></tr>
<tr><th>INIT_ISS</th><td>String representing the issuance time of the product UTC 
	timestamp YYYYMMDDHHMM</td></tr>
<tr><th>INIT_EXP</th><td>String representing the initial time of the product expiration UTC 
	timestamp YYYYMMDDHHMM</td></tr>
<tr><th>PHENOM   </th><td>VTEC phenomena code.  Ex)  SV == Severe Thunderstorm , TO == Tornado</td></tr>
<tr><th>GTYPE    </th><td>Geographical type of polygon.  C == County, P == Polygon</td></tr>
<tr><th>SIG      </th><td>VTEC significance. Ex) A == Watch, W == Warning</td></tr>
<tr><th>ETN      </th><td>VTEC Event Tracking Number</td></tr>
<tr><th>STATUS   </th><td>VTEC last value of status for the product.  Often EXP == Expire</td></tr>
<tr><th>NWS_UGC  </th><td>NWS code used for a zone of a county</td></tr>
<tr><th>AREA_KM2 </th><td>Area of the geometry in sq kilometers (Projection: EPSG 2163)</td></tr>
</table>

</div><div class="col-sm-6">
<h4>Pre-generated zip files</h4>

<p>These files are same as you could download from the form on the left, just
you don't have to wait so long! The current year's data is current up until
roughly 2 AM this morning.</p>

<table class="table table-bordered table-striped">
<thead>
<tr><th>Year</th><th>All</th><th>Limit Tor,Svr,Mar,FF</th><th>Limit Storm Based<br />Tor,Svr,Mar,FF</th></tr>
</thead>
<tbody>
{$table}
</tbody>
</table>

</div><!-- ./col -->
</div><!-- ./row -->

<h4>Service changes:</h4>
<ul>
	<li><strong>3 Feb 2016</strong>: This service used to allow the download
	of the high-resolution AWIPS counties/zones shapes.  Sadly, the size
	of these polygons would overwhelm the backend data service.  So now
	this service only returns the simplified county/zone polygons. You
	may wish to do a join against the
	<a href="http://www.nws.noaa.gov/geodata/">AWIPS Geodatabase</a> to
	get the high resolution depiction. The <code>NWS_UGC</code> column is what
	you would use to join.</li>	
</ul>
		
<h4>Archive status:</h4>
<table class="table table-bordered table-striped">
<thead>
<tr><th>Dataset component</th><th>Start Time</th><th>Notes</th></tr>
</thead>
		<tr>
 <td>Tornado<br />Severe T'storm<br /> Flash Flood<br />Special Marine</td>
 <td>1 Jan 2002 (Polygons)
     <br />1 Jan 1986 (Counties)</td>
 <td>Only the initial polygon is used.  Polygon updates in the SVS
  statements are ignored.  The VTEC attributes didn't appear until
  they became operational.</td>
</tr>
<tr>
 <td>All VTEC watch/warn</td>
 <td>12 Nov 2005</td>
 <td>Products other than TOR, SVR</td>
</tr>
<tr>
 <td>SVR,TOR Watch by County</td>
 <td>12 Nov 2005</td>
 <td></td>
</tr>
</table>
EOF;
$t->content = $content;
$t->render('single.phtml');

?>