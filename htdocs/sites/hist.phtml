<?php
  /* hist.phtml */

include("../../config/settings.inc.php");
include("setup.php");
include("../../include/imagemaps.php");
include("../../include/forms.php");
include("../../include/mlib.php");
include("../../include/myview.php");
$t = new MyView();

/* Get vars */
$year = isset($_GET['year']) ? intval($_GET['year']) : date("Y", time() - 86400);
$month = isset($_GET['month']) ? intval($_GET['month']) : date("m", time() - 86400);
$day = isset($_GET['day']) ? intval($_GET['day']) : 1;
$mode = isset($_GET['mode']) ? $_GET['mode'] : 'monthly';
$sortvar = isset($_GET['sortvar']) ? $_GET['sortvar'] : 'id';
if ($sortvar == 'station'){ $sortvar = 'id'; }

$ts = mktime(0,0,0, $month, $day, $year);
$dateStr = strftime("%Y-%m-%d", $ts);
$nicedate = strftime("%d %B %Y", $ts);
$nicemonthdate = strftime("%B %Y", $ts);
$htmlout = "";

function snowprint($val){
	if ($val == null) return "";
	if ($val > 0 && $val < 0.01) return "T";
	return $val;
}

function printMonth($year, $month, $db, $thisApp, $dailyApp){

	$sts = mktime(8, 0, 0, $month, 1, $year);
	$ets = mktime(10, 0, 0, $month + 1, 0, $year);  // CST concerns

	$lastMonth = $sts - 5*86400; // 5 days earlier
	$nextMonth = $ets + 5*86400; // 5 days later

	$lurl = $thisApp . strftime("&year=%Y&month=%m", $lastMonth);
	$lstr = strftime("%b %Y", $lastMonth);
	$nurl = $thisApp . strftime("&year=%Y&month=%m", $nextMonth);
	$nstr = strftime("%b %Y", $nextMonth);

	// Get the day of the week of the first day this month
	$first_dow = intval(strftime("%w", $sts));

	$title = strftime("%B %Y", $sts);
	$s = <<<EOF
<table class="table table-bordered">
<tr><td><a href="{$lurl}">{$lstr}</a></td><th colspan="5">{$title}</th>
    <td><a href="{$nurl}">{$nstr}</a></td></tr>
<tr><th>Sunday</th><th>Monday</th><th>Tuesday</th><th>Wednesday</th>
    <th>Thursday</th><th>Friday</th><th>Saturday</th></tr>
EOF;

	// Handle the first week
	$now = $sts;
	$s .= "<tr>";
	for($i=0;$i<$first_dow;$i++){
		$secs = $now - (86400 * ($first_dow - $i));
		$s .= '<td valign="top" bgcolor="#EEEEEE">';
		$s .= "<b>". strftime("%d", $secs) ."</b>";
		$s .= '</td>';
	}
	for($i=$first_dow;$i<7;$i++){
		$key = strftime("%Y%m%d", $now);
		 
		$s .= '<td valign="top">';
		$s .= "<b><a href=\"". $dailyApp . strftime("%d", $now) ."\">". strftime("%d", $now) ."</a></b>";
		if (isset($db[$key]["cv"])){
			$s .= sprintf(" (@%s)", $db[$key]['cv']);
		}
		$s .= "<br />". @$db[$key]["content"] ."</td>";
		$now = $now + 86400;
	} 
	$s .= "</tr>";

	// Handle the rest of the weeks
	while($now <= $ets){
		$s .= "<tr>\n";
		for($i=0;$i<7;$i++){
			$key = strftime("%Y%m%d", $now);
			if ($now < $ets){
				$s .= '<td valign="top">';
				$s .= "<b><a href=\"". $dailyApp . strftime("%d", $now) ."\">". strftime("%d", $now) ."</a></b>";
			} else {
				$s .= '<td bgcolor="#EEEEEE" valign="top">';
				$s .= "<b>". strftime("%d", $now) ."</b>";
			}
			if (isset($db[$key]["cv"])){
				$s .= sprintf(" (@%s)", $db[$key]['cv']);
			}
			$s .= "<br />". @$db[$key]["content"] ."</td>";
			$now = $now + 86400;
		} // End of week
		$s .= "</tr>\n";
	}

	$s .= "</table>";
	return $s;
} // End of printMonth

if ($mode == "monthly"){
	if (substr($network,2) == "CLIMATE"){
		$table = sprintf("alldata_%s", substr($network,0,2));
		$sql = "SELECT high as max_tmpf, to_char(day, 'YYYYMMDD') as dvalid,
				low as min_tmpf, precip as pday,
				Null as max_tmpf_qc, Null as max_gust,
				null as min_tmpf_qc, snow, snowd,
				null as cv from $table WHERE
				month = $month and year = $year and
				station = '".$station."' ORDER by day ASC";
	} else {
		$sql = "SELECT *, to_char(day, 'YYYYMMDD') as dvalid,
			to_char(coop_valid at time zone '". $metadata["tzname"] ."', 'HH PM') as cv,
		   max_gust_ts at time zone '". $metadata["tzname"] ."' as lmax_gust_ts
		   from summary_". $year ." s, stations t WHERE t.id = '". $station ."' and
		   t.iemid = s.iemid and 
		   extract(month from day) = ". $month ." and
		   extract(year from day) = ". $year ."
		   ORDER by day ASC";
	}
} else {
	$sortorder = "ASC";
	if ($sortvar == "pday" || $sortvar == "max_tmpf" || $sortvar == "max_gust"){
	   $sortorder = "DESC";
	}
	if (substr($network,2) == "CLIMATE"){
		$table = sprintf("alldata_%s", substr($network,0,2));
		$sql = "SELECT high as max_tmpf, to_char(day, 'YYYYMMDD') as dvalid,
			low as min_tmpf, precip as pday,
			Null as max_tmpf_qc, Null as max_gust,
			null as min_tmpf_qc, station as id, snow, snowd,
			null as cv from $table WHERE
			day = '".$dateStr."' ORDER by $sortvar $sortorder NULLS LAST";
	} else {
		$sql = "SELECT t.id, s.*, to_char(day, 'YYYYMMDD') as dvalid,
			to_char(coop_valid at time zone '". $metadata["tzname"] ."', 'HH PM') as cv,
			max_gust_ts at time zone '". $metadata["tzname"] ."' as lmax_gust_ts
		   from summary_". $year ." s, stations t WHERE t.iemid = s.iemid 
		   and t.network = '$network' and
		   day = '". $dateStr ."'  ORDER by $sortvar $sortorder NULLS LAST";
	}
}

if (substr($network,2) == "CLIMATE"){
	$c = iemdb("coop");
} else {
	$c = iemdb("access");
}
$rs = pg_exec($c, $sql);

if ($mode == "monthly") {
	$t->title = sprintf("%s Data Calendar for %s", $station, $nicemonthdate);
	$db = Array();
 for( $i=0; $row = @pg_fetch_assoc($rs,$i); $i++){
  $qc = $row["max_tmpf_qc"];
  if ($row["max_tmpf"] == -99) $row["max_tmpf"] = "M";
  if ($row["min_tmpf"] == 99) $row["min_tmpf"] = "M";
  $str = "";
  if (strstr($qc, 'H'))
    $str .= "<strike>High: ". $row["max_tmpf"] ."</strike>" ;
  else
    $str .= "High: ". $row["max_tmpf"] ;

  $qc = $row["min_tmpf_qc"];
  if (strstr($qc, 'L'))
    $str .= "<br><strike>Low: ". $row["min_tmpf"] ."</strike>";
  else
    $str .= "<br>Low: ". $row["min_tmpf"] ;
  if ($row["pday"] >= 0){
  	if ($row["pday"] < 0.01 && $row["pday"] > 0){
  		$str .= "<br>Rain: Trace ";
  	} else {
  		$str .= "<br>Rain: ". sprintf("%.2f", $row["pday"]);
  	}
  }
  if ($row["snow"] != null && $row["snow"] >= 0){
  	 $str .= "<br>Snow: ". snowprint($row["snow"]);
  }
  if ($row["snowd"] != null && $row["snowd"] >= 0){
  	$str .= "<br>Snow Depth: ". snowprint($row["snowd"]);
  }
  
  if (strlen($row["max_gust"]) > 0 && strlen($row["lmax_gust_ts"]) > 0) {
    $gtim = strtotime(substr($row["lmax_gust_ts"],0,16));
    $gs = date("h:i a", $gtim);
    $g = round($row["max_gust"] * 1.15,0);
    $str .= "<br>Gust:<br> ". drct2txt($row["max_drct"]) ." @ ". $g .
         "<br>(". $gs .")";
  }
  $db[ $row["dvalid"] ] = Array("content"=>$str, "cv"=>$row["cv"]);

 $htmlout = printMonth($year, $month, $db, 
 		"/sites/hist.phtml?network=$network&station=$station" , 
 		"/sites/hist.phtml?station=$station&network=$network&mode=daily&year=$year&month=$month&day=");
 } /* End of for */

 $htmlout .= sprintf('<p><img src="month_hilo_plot.php?month=%s&year=%s&network=%s&station=%s"><br /><strong>Description:</strong> This chart of the monthly temperature data.  The bars are the observations and the dots are climatology.', $month, $year, $network, $station);
 $htmlout .= sprintf('<p><img src="/plotting/month/rainfall_plot.php?network=%s&station=%s&month=%s&year=%s"><br /><strong>Description:</strong> Here is a chart of the monthly precipitation data.  The red line would be an average month while the blue line and bars are observations.', 
 		$network, $station, $month, $year);

} else {
	$t->title = sprintf("%s Network Summary for %s", $network, $nicedate);
	// We want a table of obs for one day!
 	$uri = "hist.phtml?year=$year&month=$month&day=$day&mode=daily&station=$station&network=$network&sortvar=";
 	$htmlout = <<<EOF
 	
<p>This table lists out IEM computed daily summary values for this network.
These values are derived from available observations and specialized summary
products that some of the observation sites produce.  The time zone reported
for the peak winds are hopefully the local valid time 
(<strong>{$metadata["tzname"]}</strong>) at the site. There
is a <a href="/request/daily.phtml?network={$network}">download interface</a> for most of this
summary information.</p>
 	
<table class="table table-striped table-bordered">
<thead>
<tr>
<th><a href="{$uri}id">ID:</a></th>
<th><a href="{$uri}station">Location:</a></th>
<th><a href="{$uri}max_tmpf">High:</a></th>
<th><a href="{$uri}min_tmpf">Low:</a></th>
<th><a href="{$uri}pday">Rainfall</a></th>
<th><a href="{$uri}max_gust">Peak Gust:</a></th>
<th><a href="{$uri}max_gust_ts">Time of Gust</a></th>
<th><a href="{$uri}snow">Snowfall:</a></th>
<th><a href="{$uri}snowd">Snow Depth:</a></th>
</tr>
</thead>
EOF;
 	for( $i=0; $row = @pg_fetch_assoc($rs,$i); $i++){
  		$qc = $row["max_tmpf_qc"];
  		if (! $st->load_station($row["id"], $network) ) {
  			continue;
  		}
  		if ($row["max_tmpf"] == -99) $row["max_tmpf"] = "M";
  		if ($row["min_tmpf"] == 99) $row["min_tmpf"] = "M";
  		$label = $st->table[$row["id"]]["name"];
  		if ($row["cv"]){
  			$label .= sprintf(" (@ %s)", $row["cv"]);
  		}
  		$htmlout .= "<tr><td>". $row['id'] ."</td>
  		<td><a href=\"hist.phtml?network=$network&year=$year&month=$month&mode=monthly&station=". $row["id"] ."\">{$label}</a></td>";

  		if (strstr($qc, 'H') || $row["max_tmpf"] == -99 )
    		$htmlout .= "<td><strike>". $row["max_tmpf"] ."</strike></td>" ;
  		else
    		$htmlout .= "<td>". $row["max_tmpf"] ."</td>";

	  	$qc = $row["min_tmpf_qc"];
	  	if (strstr($qc, 'L') || $row["min_tmpf"] == 99 )
	    	$htmlout .= "<td><strike>". $row["min_tmpf"] ."</strike></td>";
	  	else
	    	$htmlout .= "<td>". $row["min_tmpf"] ."</td>";
	  
	  	if ($row["pday"] < 0)
	    	$htmlout .= "<td>M</td>";
	  	else
	    	$htmlout .= "<td>". snowprint($row["pday"]) ."</td>";
	
	  	if (strlen($row["max_gust"]) > 0 && $row["lmax_gust_ts"] != "") {
	    	$gtim = strtotime(substr($row["lmax_gust_ts"],0,16));
	    	$gs = date("h:i a", $gtim);
	    	$g = round($row["max_gust"] * 1.15,0);
	
	    	$htmlout .= "<td>". drct2txt($row["max_drct"]) ." @ ". $g .
	        	 "</td><td>". $gs ."</td>";
	  	} else {
	  		$htmlout .= "<td></td><td></td>";
	  	}
	  	$htmlout .= "<td>". snowprint($row["snow"]) ."</td><td>". snowprint($row["snowd"]) ."</td>";
	  	
  		$htmlout .= "</tr>";
 	} /* End of for loop */
 	$htmlout .= "</table>\n";
}

  $t->thispage = "iem-sites";
  $t->sites_current="calendar"; 

  $content = <<<EOF
<div class="hidden-print">
<form method="GET" name="changer" class="form-inline" role="form">
<input type="hidden" name="station" value="{$station}">
<input type="hidden" name="network" value="{$network}">
EOF;
$ys = yearSelect(2002, $year, "year");
$ms = monthSelect($month, "month");
$ds = daySelect($day);
if ($mode == "monthly"){
  $content .= <<<EOF
  	<h2>Data Calendar for {$st->table[$station]["name"]}</h2>
  		The calendar chart below shows the daily reported climate variables.  
  You can click on a date to display the values for all sites for that day. 
  Time stamps are displayed in the <strong>{$metadata["tzname"]}</strong> 
  timezone. Wind speeds are in mph and temperatures in Fahrenheit.
	<p>Year: &nbsp; {$ys}
	<p>Month: &nbsp; {$ms}
	<p>&nbsp; <input type='submit' value='Change'></form>
</div>
EOF;
} else {
  $content .= <<<EOF
  <h2>{$nicedate} Summary for {$network}</h2> 
  <p>Switch date shown:<br /><input type="hidden" value="daily" name="mode">
  {$ys} {$ms} {$ds}
  <input type="submit" value="Switch Date"></form>
  </div>
EOF;
}

$content .= $htmlout;
$t->content = $content;
$t->render('sites.phtml');

?>
