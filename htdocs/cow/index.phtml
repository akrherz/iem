<?php
include("../../config/settings.inc.php");
include("../../include/myview.php");
$t = new MyView();

putenv("TZ=UTC");
 date_default_timezone_set('UTC');
 $wtype = isset($_GET["wtype"]) ? $_GET["wtype"] : Array();
 $ltype = isset($_GET["ltype"]) ? $_GET["ltype"] : Array();
 $syear = isset($_GET["syear"]) ? $_GET["syear"] : date("Y");
 $smonth = isset($_GET["smonth"]) ? $_GET["smonth"] : date("m");
 $sday = isset($_GET["sday"]) ? $_GET["sday"] : date("d");
 $shour = isset($_GET["shour"]) ? $_GET["shour"] : 12;
 $sts = mktime($shour, 0, 0, $smonth, $sday, $syear);
 $eyear = isset($_GET["eyear"]) ? $_GET["eyear"] : date("Y");
 $emonth = isset($_GET["emonth"]) ? $_GET["emonth"] : date("m");
 $eday = isset($_GET["eday"]) ? $_GET["eday"] : date("d");
 $ehour = isset($_GET["ehour"]) ? $_GET["ehour"] : 12;
 $ets = mktime($ehour, 0, 0, $emonth, $eday, $eyear);
 $hail = isset($_GET["hail"]) ? $_GET["hail"] : 1.0;
 $wind = isset($_REQUEST["wind"]) ? $_REQUEST["wind"] : 58;
 $wfo = isset($_GET["wfo"]) ? substr($_GET["wfo"],0,3) : "MPX";
 $lsrbuffer = isset($_GET["lsrbuffer"]) ? intval($_GET["lsrbuffer"]) : 15;
 $warnbuffer = isset($_GET["warnbuffer"]) ? floatval($_GET["warnbuffer"]) : 0.01;
 $useWindHailTag = isset($_REQUEST["windhailtag"]) ? $_REQUEST["windhailtag"] : 'N';
 $limitwarns = isset($_REQUEST["limitwarns"]) ? $_REQUEST["limitwarns"] : 'N';

 $abegin = mktime(0,0,0,6,8,2005);
 if ($sts < $abegin){ $sts = $abegin; }
 if ($ets < $sts){ $n = $sts; $sts = $ets; $ets = $n; }

 if ( in_array("FF", $wtype) && $syear < 2008){ 
   $wtype = array_diff( $wtype, array("FF") );
 }
 if ( in_array("FF", $ltype) && $syear < 2008){ 
   $ltype = array_diff( $ltype, array("FF") );
 }

 $t->title = "Cow (Storm Based Warning Verification)";
 $t->thispage = "severe-cow";
 include("../../include/database.inc.php");
 include("../../include/network.php");
 $nt = new NetworkTable("WFO");
 include("../../include/forms.php");

 $y1 = yearSelect2(2005,$syear,"syear");
 $m1 = monthSelect($smonth, "smonth");
 $d1 = daySelect2($sday, "sday");
 $h1 = gmtHourSelect($shour, "shour");

 $y2 = yearSelect2(2005,$eyear,"eyear");
 $m2 = monthSelect($emonth, "emonth");
 $d2 = daySelect2($eday, "eday");
 $h2 = gmtHourSelect($ehour, "ehour");
 
 $wselect = "<select name=\"wfo\">";
 while( list($key, $value) = each($nt->table) ){
 	$wselect .= "<option value=\"$key\" ";
 	if ($wfo == $key) $wselect .= "SELECTED";
 	$wselect .= ">[".$key."] ". $nt->table[$key]["name"] ."\n";
}
 $wselect .= "</select>";

 $ar = Array("TO"=> "Tornado",
 	"SV" => "Svr T'storm",
 	"MA" => "Marine",
 	"FF" => "Flash Flood (2008+)");
 $tselect = "";
 while (list($k,$v)=each($ar)){
 	$tselect .= sprintf("<input name=\"wtype[]\" type=\"checkbox\" 
 			id=\"%s\" value=\"%s\"%s>%s</input>", $k, $k, 
 		(in_array($k, $wtype) ? " CHECKED": ""), $v);
 }
 
 $ar = Array("T" => "Tornado",
 "D" => "Wind Damage",
 "H" => "Hail",
 "G" => "Wind Gust",
 "MA" => "Marine",
 "FF" => "Flash Flood (2008+)");
 $ltselect = "";
 while (list($k,$v)=each($ar)){
 	if ($k == "MA2") $ltselect .= "<br />";
 	$ltselect .= sprintf("<input name=\"ltype[]\" type=\"checkbox\"
 			id=\"%s%s\" value=\"%s\"%s>%s</input>", $k, 
 			(strlen($k) == 2)? "2": "", $k,
 			(in_array($k, $ltype) ? " CHECKED": ""), $v);
 }
   
 
 $ar = Array("0.75" => "0.75",
 	"1.00" => "1.00",
 "1.75" => "1.75",
 "2.00" => "2.00",
 "7.00" => "7.00");
 
 $hselect = make_select("hail", $hail, $ar);
 
 $ar = Array("5" => "5", "15" => "15", "30" => "30");
 $lbselect = make_select("lsrbuffer", $lsrbuffer, $ar);
 
 $ar = Array("0" => "0", "0.01" => "0.01");
 $wbuffer = make_select("warnbuffer", $warnbuffer, $ar);
 
 $ar = Array(58 => "58 mph", 70 => "70 mph", 75 => "75 mph", 150 => "150 mph");
 $wiselect = make_select("wind", $wind, $ar);

 $tagselect = "<input name=\"windhailtag\" type=\"checkbox\" value=\"Y\" ";
 $tagselect .= (($useWindHailTag == 'Y') ? " CHECKED": "");
 $tagselect .= <<<EOF
>When possible, verify SVR warnings against issuance WIND...HAIL tag
<br /><input name="limitwarns" type="checkbox" value="Y" 
EOF;
	$tagselect .= (($limitwarns == 'Y')? " CHECKED": "");
	$tagselect .= ">When possible, limit considered warnings to your hail/wind threshold";
  
 
$content = <<<EOF
<a href="/cow/">Reset Application</a> (All timestamps are displayed in UTC)
<form method="GET" name="cow" rel="nofollow">

<div class="row">
	<div class="col-sm-6">

<table class="table table-condensed">
<tr><th>Start:</th><td>{$y1} {$m1} {$d1} {$h1}</td></tr>
<tr><th>End:</th><td>{$y2} {$m2} {$d2} {$h2}</td></tr>
<tr><th>WFO:</th><td colspan="3">{$wselect}</td></tr>
<tr><th>Hail Size:</th><td>{$hselect}</td></tr>
<tr><th>LSR Buffer:</th><td>{$lbselect} km</td></tr>
<tr><th>Warning Buffer:</th><td>{$wbuffer} degrees</td></tr>
<tr><th>Wind:</th><td>{$wiselect}</td></tr>
</table>
	
	</div>
	<div class="col-sm-6">

<table class="table table-condensed">
<tr><th>Warning Type:</th>
<td>
<script type="text/javascript">
function wtypeSelect()
{
	document.getElementById("TO").checked = true;
	document.getElementById("SV").checked = true;
	document.getElementById("MA").checked = true;
	document.getElementById("FF").checked = true;
	return false;
}
</script>
<button onclick="return wtypeSelect()">Select All</button> {$tselect}
</td></tr>

<tr><th>LSR Type:</th><td>
<script type="text/javascript">
function ltypeSelect()
{
	document.getElementById("T").checked = true;
	document.getElementById("D").checked = true;
	document.getElementById("H").checked = true;
	document.getElementById("G").checked = true;
	document.getElementById("FF2").checked = true;
	document.getElementById("MA2").checked = true;
	return false;
}
</script>
<button onclick="return ltypeSelect()">Select All</button> {$ltselect}
</td></tr>

 <tr><td colspan="2">{$tagselect}</td></tr>
		
</table>
	
	</div>
</div>

<input type="submit" value="Go Cow Go">
</form>
EOF;
if (isset($_GET["hail"])){ include("worker.php"); }
      else {
$content .= <<<EOF

<h3 class="heading">IEM Cow (NWS Storm Based Warning Verification)</h3>

<p><img src="cow.jpg" align="right" style="margin: 5px;">Data presented here is <b>unofficial</b> and should be used for 
educational purposes only.  This application allows you to view warnings
and storm reports issued by a Weather Forecast Office (WFO) for a period
of time of your choice.  The application attempts to automatically provide
verification numbers for the warnings issued.

<p>This application works for dates after 8 June 2005.

<h3>Storm Based Warnings</h3>
<p><img src="http://www.weather.gov/sbwarnings/images/SBW-main.jpg" align="left" style="margin:5px;"><img src="http://www.weather.gov/sbwarnings/images/SBW-main2.jpg" align="left" style="margin: 5px;"> On the first of October 2007, the National Weather
Service began issuing warnings for tornados, severe weather, floods, and 
marine hazards on a storm by storm basis.  Previously, the warnings
were issued for an entire county. This application attempts to provide 
verification statistics for these storm based warnings.

<p>The images shown are taken from the <a href="http://www.weather.gov/sbwarnings/">NWS Storm Based Warnings</a> website.

<p>Related links:
<ul>
 <li><a href="sbwsum.phtml">Graphical Summaries of Daily SBW</a></li>
 <li><a href="sbwstats.phtml">SBW Size Statistics</a></li>
</ul>

<br clear="all"/>

<h3>Verification Methodology</h3>

<p><img src="verif_example.png" style="float: left; margin-right: 20px;" />

<p>The map on the left illustrates some of the spatial statistics the Cow
produces.  The following is a brief description of these values.

<ul>
<li><strong>SBW Area: (P)</strong> (<i>black/white outline polygon</i>) This is 
the areal size of the polygon expressed in square kilometers.  The computation
is done in the projection "US National Atlas Equal Area" (EPSG 2163).</li>
<li><strong>County Area: (C)</strong> (<i>red outline polygon</i>) Each storm 
based warning is associated with one or more counties.  This value is the total
area of the associated counties.  Same projected used as above.</li>
<li><strong>Size % (C-P)/C</strong> This is the size <strong>reduction</strong>
percentage of the storm based warning versus the counties. Prior to SBW,
the warning would have included the entire area of the county.  So larger
reduction values are desired.</li>
<li><strong>Perimeter Ratio:</strong> (<i>purple line</i>) This is an attempt
to determine how much of the storm based warning perimeter is being influenced
by a county political boundary.  The ratio is simply the portion of the SBW
perimeter that closely coincides with a political boundary.  A 100% value 
implies the warning is simply a retracement of county borders.</li>
<li><strong>Verification Area %:</strong> (<i>filled ovals</i>) Local Storm 
Reports are buffered out in a circular fashion and combined to create a 
coverage of impacted areas.  The area of the buffered LSRs is then compared
with the area of the storm based warning to yield a percentage.</li>
</ul>
EOF;
} 
$t->content = $content;
$t->render('single.phtml');
?>