<?php 

include_once "../../../config/settings.inc.php";
define("IEM_APPID", 92);
include_once "../../../include/myview.php";
include_once "../../../include/forms.php";
include_once "../../../include/vtec.php";
include_once "../../../include/imagemaps.php";
include_once "../../../include/database.inc.php";
$mesosite = iemdb("mesosite");
$formhtml = "";
$image = "";
$t = new MyView();
$t->thispage = "current-plotter";
$t->title = "Automated Data Plotter";
$t->headextra = <<<EOF
 <link rel="stylesheet" href="/vendor/jquery-ui/1.11.4/jquery-ui.css" />
<link rel="stylesheet" type="text/css" href="/assets/jquery-timepicker/1.5.3/jquery-ui-timepicker-addon.min.css"/ >
EOF;


$q = isset($_GET["q"]) ? intval($_GET["q"]) : 0;
$network = isset($_GET["network"]) ? $_GET["network"]: "IACLIMATE";
$state = isset($_GET["state"]) ? $_GET["state"]: "IA";
$lmw = isset($_GET['_l']) ? "$('#_l').click();\n": '';

// Available Plots
$data = file_get_contents("http://iem.local/plotting/auto/meta/0.json");
$jobj = json_decode($data);
$pselect = "<select name=\"q\">";
while (list($k,$v) = each($jobj->plots)){
	$pselect .= sprintf("<optgroup label=\"%s\">", $v->label);
	while (list($k2,$v2) = each($v->options)){
		$mwonly = (isset($v2->mw)) ? ' data-mw="true"': '';
		$pselect .= sprintf("<option value=\"%s\"%s%s>%s</option>", $v2->id,
			($v2->id == $q) ? ' selected="selected"': '', $mwonly, $v2->label);
	}
	$pselect .= "</optgroup>";
}
$pselect .= "</select>";

$states = Array(
	'IA' => 'Iowa',
    'IL' => 'Illinois',
    'KS' => 'Kansas',
	'KY' => 'Kentucky',
	'MI' => 'Michigan',
    'MN' => 'Minnesota',
    'MO' => 'Missouri',
    'NE' => 'Nebraska',
    'ND' => 'North Dakota',
    'OH' => 'Ohio',
    'SD' => 'South Dakota',
    'WI' => 'Wisconsin',
);

$jsextra = "";
$networks = Array();
$description = null;

$flist = "";
if ($q > 0){
	// Go find IEM Daily Features using this plot type
	$rs = pg_prepare($mesosite, "FINDFEAT",
			"select to_char(valid, 'dd Mon YYYY') as d, "
			." to_char(valid, 'YYYY/mm/dd') as d2, title from feature"
			." WHERE substr(appurl, 1, 14) = '/plotting/auto' and "
			." appurl ~* $1 ORDER by valid DESC");
	$rs = pg_execute($mesosite, "FINDFEAT", Array("q={$q}&"));
	if (pg_numrows($rs) > 0){
		$flist = <<<EOF
<h3>IEM Daily Features using this plot</h3>
<p>The IEM Daily Features found on this website often utilize plots found
		on this application.  Here is a listing of features referencing this
		plot type.</p>
<ul>
EOF;
		for ($i=0;$row=@pg_fetch_assoc($rs,$i); $i++){
			$uri = sprintf("/onsite/features/cat.php?day=%s", $row['d2']);
			$flist .= sprintf("<li><strong><a href=\"%s\">%s</a></strong>: %s</li>",
					$uri, $row["d"], $row["title"]);
		}
		$flist .= "</ul>\n";
	}
}

if (isset($_GET["q"])){
	$q = intval($_GET["q"]);
	$data = file_get_contents("http://iem.local/plotting/auto/meta/$q.json");
	$jobj = json_decode($data);
	$description = isset($jobj->description) ? $jobj->description: null;
	$imguri = "/plotting/auto/plot/$q/";
	$pltvars = Array();
	$form = "";
	while (list($k,$v) = each($jobj->arguments)){
		$value = isset($_GET[$v->name]) ? $_GET[$v->name] : $v->default;
		$thisrow = null;
		// BEGIN generation of interfaces based on types
		if ($v->type == "zstation"){
			// Build out listing of networks, if we have not already
			if (sizeof($networks) == 0){
				$rs = pg_query($mesosite, "SELECT id, name from networks 
						where id ~* 'ASOS' or id = 'AWOS' ORDER by name ASC");
				for ($i=0;$row=@pg_fetch_assoc($rs,$i);$i++){
					$networks[$row["id"]] = $row["name"];
				}
			}
			// Assume if we have zstation, then we don't have multiple stations
			if ($v->name == "zstation1"){
				$networkcgi = "network1";
			}else if ($v->name == "zstation2"){
				$networkcgi = "network2";
			}else {
				$networkcgi = "network";
			}
			$defaultnetwork = isset($v->network) ? $v->network : "IA_ASOS"; 
			$network = isset($_GET[$networkcgi]) ? $_GET[$networkcgi]: $defaultnetwork;
			$netselect = make_select($networkcgi, $network, $networks, "onNetworkChange");
			$thisrow = $netselect ." ". networkSelect($network, $value, Array(), $v->name);
			$pltvars[] = sprintf("%s:%s", $networkcgi, $network);
		}
		elseif ($v->type == "sid"){
			// Build out listing of networks, if we have not already
			if (sizeof($networks) == 0){
				$rs = pg_query($mesosite, "SELECT id, name from networks" 
					." ORDER by name ASC");
				for ($i=0;$row=@pg_fetch_assoc($rs,$i);$i++){
					$networks[$row["id"]] = $row["name"];
				}
			}
			// Assume if we have zstation, then we don't have multiple stations
			if ($v->name == "zstation1"){
				$networkcgi = "network1";
			}else if ($v->name == "zstation2"){
				$networkcgi = "network2";
			}else {
				$networkcgi = "network";
			}
			$defaultnetwork = isset($v->network) ? $v->network : "IA_ASOS"; 
			$network = isset($_GET[$networkcgi]) ? $_GET[$networkcgi]: $defaultnetwork;
			$netselect = make_select($networkcgi, $network, $networks, "onNetworkChange");
			$thisrow = $netselect ." ". networkSelect($network, $value, Array(), $v->name);
			$pltvars[] = sprintf("%s:%s", $networkcgi, $network);
		}
		elseif ($v->type == "ugc"){
			$stateselect = stateSelect($state, "onNetworkChange");
			$thisrow = $stateselect ." ". ugcStateSelect($state, $value);
			$pltvars[] = sprintf("%s:%s", "state", $state);
		}
		elseif ($v->type == "station"){
			if (sizeof($networks) == 0){
				$networks = Array("ILCLIMATE" => "Illinois",
						"INCLIMATE" => "Indiana",
						"IACLIMATE" => "Iowa",
						"KSCLIMATE" => "Kansas",
						"KYCLIMATE" => "Kentucky",
						"MICLIMATE" => "Michigan",
						"MNCLIMATE" => "Minnesota",
						"MOCLIMATE" => "Missouri",
						"NECLIMATE" => "Nebraska",
						"NDCLIMATE" => "North Dakota",
						"OHCLIMATE" => "Ohio",
						"SDCLIMATE" => "South Dakota",
						"WICLIMATE" => "Wisconsin"
				);
			}
			$netselect = make_select("network", $network, $networks, "onNetworkChange");
			$thisrow = $netselect ." ". networkSelect($network, $value);
			$pltvars[] = sprintf("%s:%s", "network", $network);
		}
		elseif ($v->type == "networkselect"){
			$extra = Array();
			if (isset($v->all)){
				$extra["_ALL"] = Array('name'=>' -- All Sites --');
			}
			$netselect = networkSelect($v->network, $value, $extra, "station");
			$thisrow = $netselect;
			$pltvars[] = sprintf("%s:%s", "network", $network);
		}
		elseif ($v->type == "phenomena"){
			$netselect = vtecPhenoSelect($value);
			$thisrow = $netselect;
		}
		elseif ($v->type == "significance"){
			$netselect = vtecSigSelect($value);
			$thisrow = $netselect;
		}
		elseif ($v->type == "vtec_ps"){
			// Tricky here, we need name to represent the suffix to the name
			$suffix = $v->name;
			$value = isset($_GET["phenomena{$suffix}"]) ? $_GET["phenomena{$suffix}"] : '';
			$netselect = vtecPhenoSelect($value, "phenomena{$suffix}");
			$value = isset($_GET["significance{$suffix}"]) ? $_GET["significance{$suffix}"] : '';
			$netselect2 = vtecSigSelect($value, "significance{$suffix}");
			$thisrow = sprintf("%s &nbsp; %s", $netselect, $netselect2);
		}
		elseif ($v->type == "state"){
			$netselect = stateSelect($value);
			$thisrow = $netselect;
		}
		elseif ($v->type == "clstate"){
			$netselect = make_select($v->name, $value, $states);
			$thisrow = $netselect;
		}
		elseif ($v->type == "text"){
			$thisrow = "<input value=\"$value\" type=\"text\" name=\"". $v->name ."\">";
		}
		elseif ($v->type == "month"){
			$thisrow = monthSelect2( $value, $v->name);
		}
		elseif ($v->type == "zhour"){
			$thisrow = gmtHourSelect( $value, $v->name);
		}
		elseif ($v->type == "hour"){
			$thisrow = hourSelect( $value, $v->name);
		}
		elseif ($v->type == "day"){
			$thisrow = daySelect( $value, $v->name);
		}
		elseif ($v->type == "year"){
			$thisrow = yearSelect2(isset($v->min) ? $v->min: 1893, $value, $v->name);
		}
		elseif ($v->type == "select"){
			$netselect = make_select($v->name, $value, $v->options);
			$thisrow = $netselect;
		}
		elseif ($v->type == 'datetime'){
			$dpname = "timepicker_". $v->name;
			$jsextra .= <<<EOF
$( "#{$dpname}" ).datetimepicker({
	changeMonth: true,
	changeYear: true,
	dateFormat: "yy/mm/dd",
	timeFormat: "HHmm", 
	minDate    : new Date("{$v->min}")});
$("#{$dpname}").datetimepicker('setDate', $.datepicker.parseDateTime('yy/mm/dd', 'HHmm', '{$value}'));
			
EOF;
			$thisrow = "<input type=\"text\" name=\"". $v->name
			."\" id=\"{$dpname}\" /> (YYYY/mm/dd HH24MI)";
		}
		elseif ($v->type == "date"){
			$dpname = "datepicker_". $v->name;
			$jsextra .= <<<EOF
$( "#{$dpname}" ).datepicker({
	changeMonth: true,
	changeYear: true,
		dateFormat: "yy/mm/dd",
		minDate    : new Date("{$v->min}")});
$("#{$dpname}").datepicker('setDate', new Date("{$value}"));
	
EOF;
			$thisrow = "<input type=\"text\" name=\"". $v->name 
					."\" id=\"{$dpname}\" /> (YYYY/mm/dd)";
		}
		if ($thisrow != null){
			if (isset($v->optional) && $v->optional){
				// Okay, we have an optional field, so we carry around an
				// extra $_GET var prefixed with _opt_
				$opton = isset($_GET["_opt_". $v->name]) ? ($_GET["_opt_". $v->name] == 'on') : false;
				$thisrow = sprintf("<input class=\"optcontrol\" %s type=\"checkbox\" value=\"on\" name=\"%s\">"
						."<div id=\"%s\" style=\"display: %s;\">%s</div>",
						$opton ? " checked=\"checked\"": "",
						"_opt_". $v->name, "_opt_". $v->name,
						$opton ? "block": 'none', $thisrow);
				if ($opton){
					if ($v->type == 'vtec_ps'){
						$value = isset($_GET["phenomena{$suffix}"]) ? $_GET["phenomena{$suffix}"] : '';
						$pltvars[] = sprintf("phenomena%s:%s", $v->name, $value);
						$value = isset($_GET["significance{$suffix}"]) ? $_GET["significance{$suffix}"] : '';
						$pltvars[] = sprintf("significance%s:%s", $v->name, $value);
					} else {
						$pltvars[] = sprintf("%s:%s", $v->name, $value);
					}
				}
			} else{
				if ($v->type == 'vtec_ps'){
					$value = isset($_GET["phenomena{$suffix}"]) ? $_GET["phenomena{$suffix}"] : '';
					$pltvars[] = sprintf("phenomena%s:%s", $v->name, $value);
					$value = isset($_GET["significance{$suffix}"]) ? $_GET["significance{$suffix}"] : '';
					$pltvars[] = sprintf("significance%s:%s", $v->name, $value);
				} else {
					$pltvars[] = sprintf("%s:%s", $v->name, $value);
				}
			}
			$form .= "<tr><td>{$v->label}</td><td>{$thisrow}</td></tr>";
		}
	}
	$imguri .= str_replace('/', '-', implode($pltvars, "::"));
	if (isset($_GET["_wait"]) && $_GET["_wait"] == 'yes'){
		$image = "";
	} else{
		$image = <<<EOF
<div id="willload"><span class="glyphicon glyphicon-arrow-down"></span> 
<img src="/images/wait24trans.gif" />
A graph will appear below this text with your specifications from above:
</div>
	<img src="{$imguri}.png" class="img img-responsive" id="theimage" />
EOF;
	}
	$lmwoption = (isset($_GET['_l'])) ? '<input type="hidden" name="_l" value="on">': '';
	$formhtml = <<<EOF
<style>
.optcontrol {
  float: left;
  margin-right: 10px !important;
}
</style>
<script>
function onNetworkChange(newnetwork){
    $("#_wait").val("yes");
	$('form#myForm').submit();
}
</script>
	<h4><span class="glyphicon glyphicon-arrow-right"></span> Second, select specific chart options::</h4>
	<form method="GET" name="s" id="myForm">
	<input type="hidden" name="_wait" value="no" id="_wait">
	<input type="hidden" name="q" value="{$q}">
	{$lmwoption}
	<table class="table table-striped">
		<thead><tr><th>Description</th><th>Value</th></tr></thead>
	$form
	</table>		
	<input type="submit" value="Make Plot with Options" />
</form>
EOF;
}

$dhtml = "";
if ($description != null){
	$dhtml = sprintf("<div class=\"alert alert-info\"><h4>Plot Description:</h4>%s</div>", $description);
}
$dataextra= "";
if (isset($jobj->data) && $jobj->data){
	$dataextra = <<<EOF
<p><a href="{$imguri}.csv" class="btn btn-default"><i class="glyphicon glyphicon-pencil"></i> View Data (as csv)</a>
<a href="{$imguri}.xlsx" class="btn btn-default"><i class="glyphicon glyphicon-pencil"></i> Download as Excel</a>
</p>
EOF;
}

$t->content = <<<EOF
<h3>Automated Data Plotter</h3>

<p>This application dynamically generates many types of graphs.  These graphs
are derived from processing of various data sources done by the IEM.  Please
feel free to use these generated graphics in whatever way you wish.</p>

<br /><form method="GET" name="t">
<div class="form-group">
<h4><span class="glyphicon glyphicon-arrow-right"></span> First, select a chart type::</h4>
 <input type="checkbox" name="_l" id="_l">Only show options that also work outside Midwest US<br />
{$pselect}
<input type="submit" value="Select Plot Type" />
</div>
</form>

<hr />


 $formhtml


<hr />

$dhtml

$image

$dataextra
		
<div><span class="glyphicon glyphicon-info-sign"></span>
		If you notice plotting issues with the image above, please 
		do <a class="alert-link" href="/info/contacts.php">let us know</a>
		by providing the 
		URL address currently shown by your web browser.</div>

{$flist}
		
EOF;
$t->jsextra = <<<EOF
<script src="/vendor/jquery-ui/1.11.4/jquery-ui.js"></script>
<script src="/assets/jquery-timepicker/1.5.3/jquery-ui-timepicker-addon.min.js"></script>
<script src="/assets/jquery-timepicker/1.5.3/jquery-ui-sliderAccess.js"></script>
<script>
$(document).ready(function(){
{$jsextra}
    $('.optcontrol').change(function(){
        if (this.checked){
        	$("#"+ this.name).css('display', 'block');
        } else {
        	$("#"+ this.name).css('display', 'none');
        }
    });
	$('#theimage').on('load', function(){
		// console.log("load() fired...");
		$('#willload').css('display', 'none');
	});
	$('#theimage').on('error', function(){
		// console.log("error() fired...");
		$('#willload').css('display', 'none');
	});
	$('#_l').change(function(){
		if($(this).is(":checked")) {
			$('select option[data-mw="true"]').addClass('hidden');
		} else {
			$('select option[data-mw="true"]').removeClass('hidden');
		}
	});
		{$lmw}
});
</script>
EOF;
$t->render('single.phtml');


?>